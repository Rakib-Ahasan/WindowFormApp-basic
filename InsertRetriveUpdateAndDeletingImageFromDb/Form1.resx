<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAR/SURBVHhe7Z07a1VdFEVDmjSmF8G3gpBaEFuLWAkBifhP
        tJL4U6wDNrbaC/4E34/OVIpYBHVOzIJwWcm955y99uPsOWBASGL28cwR772QL9+aEEIIIYQQQgghhBBC
        CCGEEEIIIYQQQgghhBDGBtyGe/AZ3Jch8t4+hXch73lxzsAn8Dv8K7N6APkNtwmLcBN+gN7FyXx+grdg
        Vu7AX9C7IJnf35APwVm4AX9A70JkOX/CLRjKOnwNvQuQ5X0DuVEY96F3sKzHXRjGS+gdKuvxFQyBLzcO
        oXeorEduFPLS8Db0DpT1ya2SswO9w2R9cqvkDHkCyM8VaSl+/xVAWRRA5yiAzlEAnaMAOkcBdI4C6BwF
        0DkKoHMUwAJnIX84kvLt3FyA947k29EogCPOwefwD7Tz+Dbfx49Fcx6+gMf/vpTv48eiUADgKvwMvTMp
        P8bPiYIDf4Pe2ZQfi4qg+wA47BfonXfcyAi87/xF+TkRdB3AquObERHwcd47yzPiOUG3AQwd30wdAZ/s
        eed48nNT02UAY8c3U0agAKB3mGeKC7gGp4xvpopADwHQO8xz6gWkGt9MFYGeBK7olAtIPb6ZIgK9DFzR
        sRcQNb6ZKgLvXwK+L2p8MvsAosc3Uz4n4JM9GvGYv8isA8g1vpkqgpzMNgCO/xV6X2eZb+G7hfetamsR
        zDKAqePzMZf2EMHsAkgxvtFDBLMKIOX4Bp+ItRTB0J9nmE0AEeMbLUQw9ucZZhFA5PgGI3gPva+xzOgI
        +LV5hnc2Pe385gO4DqPHN2qMYNn4Jl8Oe+c3HUDO8Y2aIlh1fNOLoNkASoxvXISlIxg6vskI+JBpNBlA
        yfENRjD2F1pOjWDs+ObxCJoLoIbxjRIRTB3f5D1kBE0F8BjWMr6RM4JU45u8l48W3neaxQM4/hp3iFHj
        GzkiSD2+OeSeFg9gjNHjG5dgVARR4w+1uQByjW8wgo/Qu5ZlnhRBLePTpgLIPb6RMoKaxqfNBFBqfCNF
        BFPG55+LCKeJAEqPb0yNYMr4UwM6yeoDqGV8Y0oEY7TxjdQRVB1AbeMbjID/+xXvmlO6OL6RMoJqA6h1
        fOMyjIzgpPGNVBFUGUDt4xtRESwb30gRQXUBtDK+cQWmjGDV8Y2pEVQVQGvjG6kiGDq+MSWCagJodXyD
        EUz5Thw7vjE2gioCaH18Y2wEU8c3xkRQPIC5jG8MjSDV+MbQCIoH8ADOjVVHSD2+8RB653kWDyDkAipg
        WQRR45Pi918B/KfUL6pUAJWR+1fVKoDOUQCdowA6RwF0jgLoHAXQOQqgcxRA5yiAzlEAnVP8/u9A7zBZ
        n9wqObehd5isT26VnE14CL0DZT1yI24VwivoHSrrkRuFsQu9Q2U9cqMw1uEb6B0sy8ttuFEoW/An9C5A
        lpObcJssbMPf0LsQmV9uwU2ycgvm+K9p5elyA25RBL7c2IMH0Ls4GSfvOe992Eu+IWxA/nDkU/gM7ssQ
        eW95j3mvec+FEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhFhb+wdcXg+bq3UVNgAAAABJRU5ErkJggg==
</value>
  </data>
</root>